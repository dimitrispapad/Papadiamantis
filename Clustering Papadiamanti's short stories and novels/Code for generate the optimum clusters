#best_clusters
import os
import numpy as np
import pandas as pd
from sentence_transformers import SentenceTransformer
from sklearn.preprocessing import normalize
import umap
import hdbscan
import plotly.express as px

# Load .txt files
filenames = [f for f in os.listdir() if f.endswith(".txt")]
documents = [(fname, open(fname, "r", encoding="utf-8").read()) for fname in filenames]
texts = [text for _, text in documents]
names = [name for name, _ in documents]

# Embedding using best model
print("üîç Embedding with DistilUSE...")
model = SentenceTransformer("sentence-transformers/distiluse-base-multilingual-cased-v2")
embeddings = model.encode(texts, show_progress_bar=True)
norm_embeddings = normalize(embeddings, norm="l2").astype(np.float64)

# Apply UMAP (15D) for clustering
print("üìâ Reducing dimensions with UMAP (15D)...")
umap_cluster = umap.UMAP(n_components=15, metric='cosine', random_state=42)
reduced_embeddings = umap_cluster.fit_transform(norm_embeddings).astype(np.float64)

# HDBSCAN with best config
print("üîó Clustering with HDBSCAN...")
clusterer = hdbscan.HDBSCAN(min_cluster_size=10, min_samples=5, metric='euclidean')
labels = clusterer.fit_predict(reduced_embeddings)

# Apply UMAP (2D) for visualization
print("üß≠ Reducing to 2D for visualization...")
umap_vis = umap.UMAP(n_components=2, metric='cosine', random_state=42)
vis_2d = umap_vis.fit_transform(norm_embeddings)

# Create DataFrame with clustering results
df = pd.DataFrame({
    "Filename": names,
    "Text": texts,
    "Cluster": labels,
    "X": vis_2d[:, 0],
    "Y": vis_2d[:, 1]
})

# Save to CSV
df.to_csv("distiluse_umap_hdbscan_best_clusters.csv", index=False)
print("‚úÖ Saved to 'distiluse_umap_hdbscan_best_clusters.csv'")

# Print cluster memberships
for cluster_id in sorted(df["Cluster"].unique()):
    print(f"\nüß† Cluster {cluster_id}:")
    for fname in df[df["Cluster"] == cluster_id]["Filename"]:
        print(f"  ‚Ä¢ {fname}")

# Visualize with Plotly
fig = px.scatter(df, x="X", y="Y", color=df["Cluster"].astype(str),
                 hover_data=["Filename"], title="DistilUSE + UMAP + HDBSCAN Clustering")
fig.show()

fig.write_html("cluster_plot.html")

